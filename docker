version: '3.8'

services:
  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - microservices_net

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: microservices_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    networks:
      - microservices_net
    volumes:
      - mysql_data:/var/lib/mysql

  user-service:
    build: ./user_service
    depends_on:
      - mysql
    environment:
      DB_HOST: mysql
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: microservices_db
    networks:
      - microservices_net
    labels:
      - "traefik.http.routers.user-service.rule=Host(`user.localhost`)"
    deploy:
      resources:
        limits:
          memory: 512M

  notification-service:
    build: ./notification_service
    depends_on:
      - mysql
    networks:
      - microservices_net
    labels:
      - "traefik.http.routers.notification-service.rule=Host(`notification.localhost`)"
    deploy:
      resources:
        limits:
          memory: 512M

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - microservices_net

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - microservices_net
    depends_on:
      - prometheus

networks:
  microservices_net:
    driver: bridge

volumes:
  mysql_data:
